{"version":3,"sources":["ColorBox.js","Navbar.js","Footer.js","Palette.js","MiniPalette.js","PaletteList.js","seedColors.js","colorHelpers.js","SingleColorPalette.js","DraggableColorBox.js","DraggableColorList.js","NewPaletteForm.js","App.js","serviceWorker.js","index.js"],"names":["ColorBox","name","url","showLink","color","useState","copied","setCopied","handleCopy","a","delay","ms","Promise","res","setTimeout","hex","isLight","chroma","luminance","isDark","text","onCopy","style","background","className","to","onClick","e","stopPropagation","Navbar","changeFormat","level","changeLevel","showSlider","format","setFormat","open","setOpen","closeSnackbar","defaultValue","min","max","step","onChange","Select","value","target","MenuItem","Snackbar","anchorOrigin","vertical","horizontal","message","toUpperCase","autoHideDuration","onClose","action","IconButton","size","aria-label","fontSize","Footer","props","paletteName","emoji","Palette","setLevel","id","ColorBoxs","colors","map","key","withStyles","root","backgroundColor","border","borderRadius","padding","position","overflow","cursor","height","width","title","display","justifyContent","alignItems","margin","paddingTop","marginLeft","miniColor","marginBottom","classes","miniColorBoxes","handleClick","container","flexDirection","flexWrap","nav","palettes","boxSizing","gridTemplateColumns","gridGap","history","palette","push","levels","generatePalette","starterPalette","newPalette","hexColor","numberOfColors","scale","darken","getRange","mode","reverse","i","toLowerCase","replace","rgb","css","rgba","SingleColorPalette","match","idColor","params","shadesOfColor","shades","concat","filter","slice","_shades","indx","DraggableColorBox","SortableElement","BoxContent","DeleteIcon","transform","left","bottom","letterSpacing","textTransform","transition","DraggableColorList","SortableContainer","deleteColorBox","index","NewPaletteForm","handleDrawerOpen","setState","handleDrawerClose","handleChangeComplete","newColor","currentColor","addColor","state","newColorName","handleChange","event","addPalette","newPaletteName","addNewPalette","onSortEnd","oldIndex","newIndex","arrayMove","ValidatorForm","addValidationRule","every","this","CssBaseline","AppBar","classNames","appBar","appBarShift","Toolbar","disableGutters","menuButton","hide","Typography","variant","noWrap","onSubmit","validators","errorMessages","Button","type","Drawer","drawer","anchor","paper","drawerPaper","drawerHeader","Divider","onChangeComplete","ref","content","contentShift","axis","React","Component","theme","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","marginRight","flexShrink","mixins","toolbar","flexGrow","spacing","unit","withTheme","App","seedColors","setPalettes","findPalette","find","exact","path","render","routProps","routeProps","idPalette","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.c3b81cc7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './ColorBox.css';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Link } from 'react-router-dom';\nimport chroma from 'chroma-js';\n\nfunction ColorBox({ name, url, showLink, color }) {\n  const [copied, setCopied] = useState(false);\n\n  const handleCopy = async () => {\n    //convert this into a watch property.\n    const delay = (ms) => new Promise((res) => setTimeout(res, ms));\n    setCopied(true);\n    await delay(1500);\n    setCopied(false);\n  };\n\n  const hex = color;\n  const isLight = chroma(hex).luminance() >= 0.6;\n  const isDark = chroma(hex).luminance() <= 0.06;\n\n  return (\n    <CopyToClipboard text={hex} onCopy={handleCopy}>\n      <div style={{ background: hex }} className=\"ColorBox\">\n        <div\n          style={{ background: hex }}\n          className={`copy-overlay ${copied ? 'show' : ''}`}\n        />\n        <div className={`copy-mssg ${copied ? 'show' : ''}`}>\n          <h1>Copied!</h1>\n          <p className={isLight ? 'isLight' : ''}>{hex}</p>\n        </div>\n        <div className=\"copy-container\">\n          <div className={`box-content ${isDark ? 'isDark' : ''}`}>\n            <span>{name + ' ' + chroma(hex).luminance()}</span>\n          </div>\n          <button className={`copy-button ${isLight ? 'isLight' : ''}`}>\n            Copy\n          </button>\n        </div>\n        {showLink && (\n          <Link to={url} onClick={(e) => e.stopPropagation()}>\n            <span className={`see-more ${isLight ? 'isLight' : ''}`}>More</span>\n          </Link>\n        )}\n      </div>\n    </CopyToClipboard>\n  );\n}\n\nexport default ColorBox;\n","import React, { useState } from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Link } from 'react-router-dom';\nimport 'rc-slider/assets/index.css';\nimport './Navbar.css';\nimport Slider from 'rc-slider';\n\nfunction Navbar({ changeFormat, level, changeLevel, showSlider }) {\n  const [format, setFormat] = useState('hex');\n  const [open, setOpen] = useState(false);\n\n  const handleChange = (e) => {\n    setFormat(e.target.value);\n    setOpen(true);\n    changeFormat(e.target.value);\n  };\n  const closeSnackbar = () => {\n    setOpen(false);\n  };\n\n  return (\n    <header className=\"Navbar\">\n      <div className=\"logo\">\n        <Link to=\"/\">ReactColorApp</Link>\n      </div>\n      {showSlider && (\n        <div className=\"slider-container\">\n          <span>Level: {level}</span>\n          <div className=\"slider\">\n            <Slider\n              defaultValue={level}\n              min={100}\n              max={900}\n              step={100}\n              onChange={changeLevel}\n            />\n          </div>\n        </div>\n      )}\n      <div className=\"select-container\">\n        <Select value={format} onChange={handleChange}>\n          <MenuItem value=\"hex\">HEX - #ffffff</MenuItem>\n          <MenuItem value=\"rgb\">RGB - rgb(255,255,255)</MenuItem>\n          <MenuItem value=\"rgba\">RGBA - rgba(255,255,255, 1.0)</MenuItem>\n        </Select>\n      </div>\n      <Snackbar\n        open={open}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        message={'Format Has Changed To ' + format.toUpperCase()}\n        autoHideDuration={3000}\n        onClose={closeSnackbar}\n        action={[\n          <IconButton\n            size=\"small\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            onClick={closeSnackbar}\n          >\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>,\n        ]}\n      />\n    </header>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\n\nfunction Footer(props) {\n  const { paletteName, emoji } = props;\n  return (\n    <footer className=\"palette-footer\">\n      <span>{paletteName}</span>\n      <span className=\"emoji\">{emoji}</span>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport ColorBox from './ColorBox';\nimport './Palette.css';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\n\nfunction Palette({ Palette }) {\n  const [level, setLevel] = useState(500);\n  const [format, setFormat] = useState('hex');\n\n  const { id, paletteName, emoji } = Palette;\n  const ColorBoxs = Palette.colors[level].map((color) => (\n    <ColorBox\n      name={color.name}\n      color={color[format]}\n      key={color.id}\n      url={`/palette/${id}/${color.id}`}\n      showLink\n    />\n  ));\n  return (\n    <div className=\"Palette\">\n      <Navbar\n        level={level}\n        changeLevel={setLevel}\n        changeFormat={setFormat}\n        showSlider\n      />\n      <div className=\"Palette-colors\">{ColorBoxs}</div>\n      <Footer paletteName={paletteName} emoji={emoji} />\n    </div>\n  );\n}\n\nexport default Palette;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  root: {\n    backgroundColor: 'white',\n    border: '1px solid black',\n    borderRadius: '5px',\n    padding: '0.5rem',\n    position: 'relative',\n    overflow: 'hidden',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  colors: {\n    backgroundColor: '#dae1e4',\n    height: '150px',\n    width: '100%',\n    borderRadius: '5px',\n    overflow: 'hidden',\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: '0',\n    color: 'black',\n    paddingTop: '0.5rem',\n    fontSize: '1rem',\n    position: 'relative',\n  },\n  emoji: {\n    marginLeft: '0.5rem',\n    fontSize: '1.5rem',\n  },\n  miniColor: {\n    height: '25%',\n    width: '20%',\n    display: 'inline-block',\n    margin: '0 auto',\n    position: 'relative',\n    marginBottom: '-3.5px',\n  },\n};\n\nfunction MiniPalette(props) {\n  const { paletteName, emoji, classes, colors } = props;\n  const miniColorBoxes = colors.map((color) => (\n    <div\n      className={classes.miniColor}\n      style={{ background: color.color }}\n      key={color.color}\n    ></div>\n  ));\n  return (\n    <div className={classes.root} onClick={props.handleClick}>\n      <div className={classes.colors}>{miniColorBoxes}</div>\n      <h5 className={classes.title}>\n        {paletteName} <span className={classes.emoji}>{emoji}</span>\n      </h5>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(MiniPalette);\n","import React from 'react';\nimport MiniPalette from './MiniPalette';\nimport { withStyles } from '@material-ui/styles';\nimport { Link } from 'react-router-dom';\n\nconst styles = {\n  root: {\n    backgroundColor: 'blue',\n    height: '100vh',\n    display: 'flex',\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  container: {\n    width: '50%',\n    display: 'flex',\n    alignItems: 'flex-start',\n    flexDirection: 'column',\n    flexWrap: 'wrap',\n  },\n  nav: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-between',\n    color: 'white',\n    alignItems: 'center',\n    '& a': {\n      color: 'white',\n    },\n  },\n  palettes: {\n    boxSizing: 'border-box',\n    width: '100%',\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 30%)',\n    gridGap: '5%',\n  },\n};\n\nfunction PaletteList({ palettes, classes, history }) {\n  const goToPalette = (id) => {\n    history.push(`/palette/${id}`);\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.container}>\n        <nav className={classes.nav}>\n          <h1>React Colors</h1>\n          <Link to=\"/palette/new\">Create Palette</Link>\n        </nav>\n        <div className={classes.palettes}>\n          {palettes.map((palette) => (\n            <MiniPalette\n              key={palette.id}\n              {...palette}\n              handleClick={() => goToPalette(palette.id)}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(PaletteList);\n","export default [\n    {\n      paletteName: \"Material UI Colors\",\n      id: \"material-ui-colors\",\n      emoji: \"🎨\",\n      colors: [\n        { name: \"red\", color: \"#F44336\" },\n        { name: \"pink\", color: \"#E91E63\" },\n        { name: \"purple\", color: \"#9C27B0\" },\n        { name: \"deeppurple\", color: \"#673AB7\" },\n        { name: \"indigo\", color: \"#3F51B5\" },\n        { name: \"blue\", color: \"#2196F3\" },\n        { name: \"lightblue\", color: \"#03A9F4\" },\n        { name: \"cyan\", color: \"#00BCD4\" },\n        { name: \"teal\", color: \"#009688\" },\n        { name: \"green\", color: \"#4CAF50\" },\n        { name: \"lightgreen\", color: \"#8BC34A\" },\n        { name: \"lime\", color: \"#CDDC39\" },\n        { name: \"yellow\", color: \"#FFEB3B\" },\n        { name: \"amber\", color: \"#FFC107\" },\n        { name: \"orange\", color: \"#FF9800\" },\n        { name: \"deeporange\", color: \"#FF5722\" },\n        { name: \"brown\", color: \"#795548\" },\n        { name: \"grey\", color: \"#9E9E9E\" },\n        { name: \"bluegrey\", color: \"#607D8B\" },\n        { name: \"DraculaOrchid\", color: \"#2d3436\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors v1\",\n      id: \"flat-ui-colors-v1\",\n      emoji: \"🤙\",\n      colors: [\n        { name: \"Turquoise\", color: \"#1abc9c\" },\n        { name: \"Emerald\", color: \"#2ecc71\" },\n        { name: \"PeterRiver\", color: \"#3498db\" },\n        { name: \"Amethyst\", color: \"#9b59b6\" },\n        { name: \"WetAsphalt\", color: \"#34495e\" },\n        { name: \"GreenSea\", color: \"#16a085\" },\n        { name: \"Nephritis\", color: \"#27ae60\" },\n        { name: \"BelizeHole\", color: \"#2980b9\" },\n        { name: \"Wisteria\", color: \"#8e44ad\" },\n        { name: \"MidnightBlue\", color: \"#2c3e50\" },\n        { name: \"SunFlower\", color: \"#f1c40f\" },\n        { name: \"Carrot\", color: \"#e67e22\" },\n        { name: \"Alizarin\", color: \"#e74c3c\" },\n        { name: \"Clouds\", color: \"#ecf0f1\" },\n        { name: \"Concrete\", color: \"#95a5a6\" },\n        { name: \"Orange\", color: \"#f39c12\" },\n        { name: \"Pumpkin\", color: \"#d35400\" },\n        { name: \"Pomegranate\", color: \"#c0392b\" },\n        { name: \"Silver\", color: \"#bdc3c7\" },\n        { name: \"Asbestos\", color: \"#7f8c8d\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors Dutch\",\n      id: \"flat-ui-colors-dutch\",\n      emoji: \"🇳🇱\",\n      colors: [\n        { name: \"Sunflower\", color: \"#FFC312\" },\n        { name: \"Energos\", color: \"#C4E538\" },\n        { name: \"BlueMartina\", color: \"#12CBC4\" },\n        { name: \"LavenderRose\", color: \"#FDA7DF\" },\n        { name: \"BaraRose\", color: \"#ED4C67\" },\n        { name: \"RadiantYellow\", color: \"#F79F1F\" },\n        { name: \"AndroidGreen\", color: \"#A3CB38\" },\n        { name: \"MediterraneanSea\", color: \"#1289A7\" },\n        { name: \"LavenderTea\", color: \"#D980FA\" },\n        { name: \"VerryBerry\", color: \"#B53471\" },\n        { name: \"PuffinsBill\", color: \"#EE5A24\" },\n        { name: \"PixelatedGrass\", color: \"#009432\" },\n        { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\n        { name: \"ForgottenPurple\", color: \"#9980FA\" },\n        { name: \"HollyHock\", color: \"#833471\" },\n        { name: \"RedPigment\", color: \"#EA2027\" },\n        { name: \"TurkishAqua\", color: \"#006266\" },\n        { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\n        { name: \"CircumorbitalRing\", color: \"#5758BB\" },\n        { name: \"MagentaPurple\", color: \"#6F1E51\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors American\",\n      id: \"flat-ui-colors-american\",\n      emoji: \"🇺🇸\",\n      colors: [\n        { name: \"LightGreenishBlue\", color: \"#55efc4\" },\n        { name: \"FadedPoster\", color: \"#81ecec\" },\n        { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\n        { name: \"ShyMoment\", color: \"#a29bfe\" },\n        { name: \"CityLights\", color: \"#dfe6e9\" },\n        { name: \"MintLeaf\", color: \"#00b894\" },\n        { name: \"RobinsEggBlue\", color: \"#00cec9\" },\n        { name: \"ElectronBlue\", color: \"#0984e3\" },\n        { name: \"ExodusFruit\", color: \"#6c5ce7\" },\n        { name: \"SoothingBreeze\", color: \"#b2bec3\" },\n        { name: \"SourLemon\", color: \"#ffeaa7\" },\n        { name: \"FirstDate\", color: \"#fab1a0\" },\n        { name: \"PinkGlamour\", color: \"#ff7675\" },\n        { name: \"Pico8Pink\", color: \"#fd79a8\" },\n        { name: \"AmericanRiver\", color: \"#636e72\" },\n        { name: \"BrightYarrow\", color: \"#fdcb6e\" },\n        { name: \"OrangeVille\", color: \"#e17055\" },\n        { name: \"Chi-Gong\", color: \"#d63031\" },\n        { name: \"PrunusAvium\", color: \"#e84393\" },\n        { name: \"DraculaOrchid\", color: \"#2d3436\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors Aussie\",\n      id: \"flat-ui-colors-aussie\",\n      emoji: \"🇦🇺\",\n      colors: [\n        { name: \"Beekeeper\", color: \"#f6e58d\" },\n        { name: \"SpicedNectarine\", color: \"#ffbe76\" },\n        { name: \"PinkGlamour\", color: \"#ff7979\" },\n        { name: \"JuneBud\", color: \"#badc58\" },\n        { name: \"CoastalBreeze\", color: \"#dff9fb\" },\n        { name: \"Turbo\", color: \"#f9ca24\" },\n        { name: \"QuinceJelly\", color: \"#f0932b\" },\n        { name: \"CarminePink\", color: \"#eb4d4b\" },\n        { name: \"PureApple\", color: \"#6ab04c\" },\n        { name: \"HintOfIcePack\", color: \"#c7ecee\" },\n        { name: \"MiddleBlue\", color: \"#7ed6df\" },\n        { name: \"Heliotrope\", color: \"#e056fd\" },\n        { name: \"ExodusFruit\", color: \"#686de0\" },\n        { name: \"DeepKoamaru\", color: \"#30336b\" },\n        { name: \"SoaringEagle\", color: \"#95afc0\" },\n        { name: \"GreenlandGreen\", color: \"#22a6b3\" },\n        { name: \"SteelPink\", color: \"#be2edd\" },\n        { name: \"Blurple\", color: \"#4834d4\" },\n        { name: \"DeepCove\", color: \"#130f40\" },\n        { name: \"WizardGrey\", color: \"#535c68\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors British\",\n      id: \"flat-ui-colors-british\",\n      emoji: \"🇬🇧\",\n      colors: [\n        { name: \"ProtossPylon\", color: \"#00a8ff\" },\n        { name: \"Periwinkle\", color: \"#9c88ff\" },\n        { name: \"Rise-N-Shine\", color: \"#fbc531\" },\n        { name: \"DownloadProgress\", color: \"#4cd137\" },\n        { name: \"Seabrook\", color: \"#487eb0\" },\n        { name: \"VanaDylBlue\", color: \"#0097e6\" },\n        { name: \"MattPurple\", color: \"#8c7ae6\" },\n        { name: \"NanohanachaGold\", color: \"#e1b12c\" },\n        { name: \"SkirretGreen\", color: \"#44bd32\" },\n        { name: \"Naval\", color: \"#40739e\" },\n        { name: \"NasturcianFlower\", color: \"#e84118\" },\n        { name: \"LynxWhite\", color: \"#f5f6fa\" },\n        { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\n        { name: \"MazarineBlue\", color: \"#273c75\" },\n        { name: \"BlueNights\", color: \"#353b48\" },\n        { name: \"HarleyOrange\", color: \"#c23616\" },\n        { name: \"HintOfPensive\", color: \"#dcdde1\" },\n        { name: \"ChainGangGrey\", color: \"#718093\" },\n        { name: \"PicoVoid\", color: \"#192a56\" },\n        { name: \"ElectroMagnetic\", color: \"#2f3640\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors Spanish\",\n      id: \"flat-ui-colors-spanish\",\n      emoji: \"🇪🇸\",\n      colors: [\n        { name: \"JacksonsPurple\", color: \"#40407a\" },\n        { name: \"C64Purple\", color: \"#706fd3\" },\n        { name: \"SwanWhite\", color: \"#f7f1e3\" },\n        { name: \"SummerSky\", color: \"#34ace0\" },\n        { name: \"CelestialGreen\", color: \"#33d9b2\" },\n        { name: \"LuckyPoint\", color: \"#2c2c54\" },\n        { name: \"Liberty\", color: \"#474787\" },\n        { name: \"HotStone\", color: \"#aaa69d\" },\n        { name: \"DevilBlue\", color: \"#227093\" },\n        { name: \"PalmSpringsSplash\", color: \"#218c74\" },\n        { name: \"FlourescentRed\", color: \"#ff5252\" },\n        { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\n        { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\n        { name: \"MandarinSorbet\", color: \"#ffb142\" },\n        { name: \"SpicedButterNut\", color: \"#ffda79\" },\n        { name: \"EyeOfNewt\", color: \"#b33939\" },\n        { name: \"ChileanFire\", color: \"#cd6133\" },\n        { name: \"GreyPorcelain\", color: \"#84817a\" },\n        { name: \"AlamedaOchre\", color: \"#cc8e35\" },\n        { name: \"Desert\", color: \"#ccae62\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors Indian\",\n      id: \"flat-ui-colors-indian\",\n      emoji: \"🇮🇳\",\n      colors: [\n        { name: \"OrchidOrange\", color: \"#FEA47F\" },\n        { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\n        { name: \"HoneyGlow\", color: \"#EAB543\" },\n        { name: \"SweetGarden\", color: \"#55E6C1\" },\n        { name: \"FallingStar\", color: \"#CAD3C8\" },\n        { name: \"RichGardenia\", color: \"#F97F51\" },\n        { name: \"ClearChill\", color: \"#1B9CFC\" },\n        { name: \"WhitePepper\", color: \"#F8EFBA\" },\n        { name: \"Keppel\", color: \"#58B19F\" },\n        { name: \"ShipsOfficer\", color: \"#2C3A47\" },\n        { name: \"FieryFuchsia\", color: \"#B33771\" },\n        { name: \"BlueBell\", color: \"#3B3B98\" },\n        { name: \"GeorgiaPeach\", color: \"#FD7272\" },\n        { name: \"OasisStream\", color: \"#9AECDB\" },\n        { name: \"BrightUbe\", color: \"#D6A2E8\" },\n        { name: \"MagentaPurple\", color: \"#6D214F\" },\n        { name: \"EndingNavyBlue\", color: \"#182C61\" },\n        { name: \"SasquatchSocks\", color: \"#FC427B\" },\n        { name: \"PineGlade\", color: \"#BDC581\" },\n        { name: \"HighlighterLavender\", color: \"#82589F\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors French\",\n      id: \"flat-ui-colors-french\",\n      emoji: \"🇫🇷\",\n      colors: [\n        { name: \"FlatFlesh\", color: \"#fad390\" },\n        { name: \"MelonMelody\", color: \"#f8c291\" },\n        { name: \"Livid\", color: \"#6a89cc\" },\n        { name: \"Spray\", color: \"#82ccdd\" },\n        { name: \"ParadiseGreen\", color: \"#b8e994\" },\n        { name: \"SquashBlossom\", color: \"#f6b93b\" },\n        { name: \"MandarinRed\", color: \"#e55039\" },\n        { name: \"AzraqBlue\", color: \"#4a69bd\" },\n        { name: \"Dupain\", color: \"#60a3bc\" },\n        { name: \"AuroraGreen\", color: \"#78e08f\" },\n        { name: \"IcelandPoppy\", color: \"#fa983a\" },\n        { name: \"TomatoRed\", color: \"#eb2f06\" },\n        { name: \"YueGuangBlue\", color: \"#1e3799\" },\n        { name: \"GoodSamaritan\", color: \"#3c6382\" },\n        { name: \"Waterfall\", color: \"#38ada9\" },\n        { name: \"CarrotOrange\", color: \"#e58e26\" },\n        { name: \"JalapenoRed\", color: \"#b71540\" },\n        { name: \"DarkSapphire\", color: \"#0c2461\" },\n        { name: \"ForestBlues\", color: \"#0a3d62\" },\n        { name: \"ReefEncounter\", color: \"#079992\" }\n      ]\n    }\n  ];","import chroma from \"chroma-js\";\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\n\nfunction generatePalette(starterPalette) {\n  let newPalette = {\n    paletteName: starterPalette.paletteName,\n    id: starterPalette.id,\n    emoji: starterPalette.emoji,\n    colors: {}\n  };\n  for (let level of levels) {\n    newPalette.colors[level] = [];\n  }\n  for (let color of starterPalette.colors) {\n    let scale = getScale(color.color, 10).reverse();\n    for (let i in scale) {\n      newPalette.colors[levels[i]].push({\n        name: `${color.name} ${levels[i]}`,\n        id: color.name.toLowerCase().replace(/ /g, \"-\"),\n        hex: scale[i],\n        rgb: chroma(scale[i]).css(),\n        rgba: chroma(scale[i])\n          .css()\n          .replace(\"rgb\", \"rgba\")\n          .replace(\")\", \",1.0)\")\n      });\n    }\n  }\n  return newPalette;\n}\nfunction getRange(hexColor) {\n  const end = \"#fff\";\n  return [\n    chroma(hexColor)\n      .darken(1.4)\n      .hex(),\n    hexColor,\n    end\n  ];\n}\n\nfunction getScale(hexColor, numberOfColors) {\n  return chroma\n    .scale(getRange(hexColor))\n    .mode(\"lab\")\n    .colors(numberOfColors);\n}\n\nexport { generatePalette };","import React, { useState } from 'react';\nimport ColorBox from './ColorBox';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\nimport { Link } from 'react-router-dom';\n\nfunction SingleColorPalette({ Palette, match }) {\n  const [format, setFormat] = useState('hex');\n\n  const _shades = (id) => {\n    let shades = [];\n    let colors = Palette.colors;\n    for (let key in colors) {\n      shades = shades.concat(colors[key].filter((color) => color.id === id));\n    }\n    return shades.slice(1);\n  };\n\n  const { idColor } = match.params;\n  const { paletteName, emoji, id } = Palette;\n  const shadesOfColor = _shades(idColor).map((color, indx) => (\n    <ColorBox key={indx} name={color.name} color={color[format]} />\n  ));\n\n  return (\n    <div className=\"Palette SingleColorPalette\">\n      <Navbar changeFormat={setFormat} showSlider={false} />\n      <div className=\"Palette-colors\">\n        {shadesOfColor}\n        <div className=\"ColorBox go-back\">\n          <Link to={`/palette/${id}`}>\n            <span className=\"copy-button\">Go Back</span>\n          </Link>\n        </div>\n      </div>\n      <Footer paletteName={paletteName} emoji={emoji} />\n    </div>\n  );\n}\n\nexport default SingleColorPalette;\n","import React from 'react';\nimport { SortableElement } from 'react-sortable-hoc';\nimport { withStyles } from '@material-ui/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst styles = {\n  ColorBox: {\n    width: '20%',\n    height: '25%',\n    margin: '0 auto',\n    display: 'inline-block',\n    position: 'relative',\n    cursor: 'pointer',\n    marginBottom: '-4px',\n    '&:hover svg': {\n      color: 'white',\n      transform: 'scale(1.5)',\n    },\n  },\n\n  BoxContent: {\n    position: 'absolute',\n    width: '100%',\n    left: '0px',\n    bottom: '0px',\n    padding: '10px',\n    color: 'rgba(0,0,0,0.5)',\n    letterSpacing: '1px',\n    textTransform: 'uppercase',\n    fontSize: '12px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n\n  DeleteIcon: {\n    transition: 'all 0.5s ease-in-out',\n  },\n};\n\nconst DraggableColorBox = SortableElement((props) => {\n  const { classes, handleClick } = props;\n  return (\n    <div\n      className={classes.ColorBox}\n      style={{ backgroundColor: props.color.color }}\n    >\n      <div className={classes.BoxContent}>\n        <span>{props.color.name}</span>\n        <DeleteIcon className={classes.DeleteIcon} onClick={handleClick} />\n      </div>\n    </div>\n  );\n});\n\nexport default withStyles(styles)(DraggableColorBox);\n","import React from 'react';\nimport DraggableColorBox from './DraggableColorBox';\nimport { SortableContainer } from 'react-sortable-hoc';\n\nconst DraggableColorList = SortableContainer(({ colors, deleteColorBox }) => {\n  return (\n    <div style={{ height: '100%' }}>\n      {colors.map((color, index) => (\n        <DraggableColorBox\n          key={color.name}\n          index={index}\n          handleClick={() => deleteColorBox(color.name)}\n          color={color}\n        />\n      ))}\n    </div>\n  );\n});\n\nexport default DraggableColorList;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Button from '@material-ui/core/Button';\nimport ChromePicker from 'react-color';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport DraggableColorList from './DraggableColorList';\nimport arrayMove from 'array-move';\n\nconst drawerWidth = 400;\n\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    height: 'calc(100vh - 64px)',\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n});\n\nclass NewPaletteForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      currentColor: 'red',\n      colors: [],\n      newColorName: '',\n      newPaletteName: '',\n    };\n  }\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleChangeComplete = (newColor) => {\n    this.setState({ currentColor: newColor.hex });\n  };\n\n  addColor = () => {\n    const color = {\n      name: this.state.newColorName,\n      color: this.state.currentColor,\n    };\n    this.setState({ colors: [...this.state.colors, color], newColorName: '' });\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  componentDidMount() {\n    // custom rule will have name 'isPasswordMatch'\n    ValidatorForm.addValidationRule('isColorNameUnique', (value) =>\n      this.state.colors.every(\n        ({ name }) => name.toLowerCase() !== value.toLowerCase()\n      )\n    );\n\n    ValidatorForm.addValidationRule('isColorUnique', (value) =>\n      this.state.colors.every(({ color }) => color !== this.state.currentColor)\n    );\n\n    ValidatorForm.addValidationRule('isPaletteNameUnique', (value) =>\n      this.props.palettes.every(\n        ({ paletteName }) =>\n          paletteName.toLowerCase() !== this.state.newPaletteName.toLowerCase()\n      )\n    );\n  }\n\n  addPalette = () => {\n    let { newPaletteName } = this.state;\n    const palette = {\n      paletteName: newPaletteName,\n      id: newPaletteName.toLowerCase().replace(/ /g, '-'),\n      colors: this.state.colors,\n    };\n\n    this.props.addNewPalette(palette);\n    this.props.history.push('/');\n  };\n\n  deleteColorBox = (name) => {\n    this.setState({\n      colors: this.state.colors.filter((color) => color.name !== name),\n    });\n  };\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    this.setState(({ colors }) => ({\n      colors: arrayMove(colors, oldIndex, newIndex),\n    }));\n  };\n  render() {\n    const { classes } = this.props;\n    const { open } = this.state;\n    const { newColorName } = this.state;\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          color=\"default\"\n          className={classNames(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar disableGutters={!open}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Persistent drawer\n            </Typography>\n            <ValidatorForm onSubmit={this.addPalette}>\n              <TextValidator\n                value={this.state.newPaletteName}\n                onChange={this.handleChange}\n                name=\"newPaletteName\"\n                validators={['required', 'isPaletteNameUnique']}\n                errorMessages={[\n                  'Enter a color name',\n                  'this palette name is already used',\n                ]}\n              />\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Save Palette\n              </Button>\n            </ValidatorForm>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={this.handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <Typography variant=\"h4\">Design Your Palette</Typography>\n          <Button variant=\"contained\" color=\"secondary\">\n            Clear Palette\n          </Button>\n          <Button variant=\"contained\" color=\"primary\">\n            Random Color\n          </Button>\n          <ChromePicker\n            color={this.state.currentColor}\n            onChangeComplete={this.handleChangeComplete}\n          />\n          <ValidatorForm onSubmit={this.addColor} ref=\"form\">\n            <TextValidator\n              value={newColorName}\n              onChange={this.handleChange}\n              name=\"newColorName\"\n              validators={['required', 'isColorNameUnique', 'isColorUnique']}\n              errorMessages={[\n                'Enter a color name',\n                'Color name must be unique',\n                'Color already used!',\n              ]}\n            />\n            <Button\n              variant=\"contained\"\n              style={{ backgroundColor: this.state.currentColor }}\n              type=\"submit\"\n            >\n              Add Color\n            </Button>\n          </ValidatorForm>\n        </Drawer>\n        <main\n          className={classNames(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n          <DraggableColorList\n            axis=\"xy\"\n            colors={this.state.colors}\n            onSortEnd={this.onSortEnd}\n            deleteColorBox={this.deleteColorBox}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(NewPaletteForm);\n","import React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Palette from './Palette';\nimport PaletteList from './PaletteList';\nimport seedColors from './seedColors';\nimport { generatePalette } from './colorHelpers';\nimport SingleColorPalette from './SingleColorPalette';\nimport NewPaletteForm from './NewPaletteForm';\n\nfunction App() {\n  const [palettes, setPalettes] = useState(seedColors);\n\n  const findPalette = (id) => {\n    return palettes.find((palette) => palette.id === id);\n  };\n\n  const addNewPalette = (newPalette) => {\n    setPalettes([...palettes, newPalette]);\n  };\n\n  return (\n    <Switch>\n      <Route\n        exact\n        path=\"/\"\n        render={(routProps) => (\n          <PaletteList palettes={palettes} {...routProps} />\n        )}\n      />\n      <Route\n        exact\n        path=\"/palette/new\"\n        render={(routeProps) => (\n          <NewPaletteForm\n            palettes={palettes}\n            {...routeProps}\n            addNewPalette={addNewPalette}\n          />\n        )}\n      />\n      <Route\n        exact\n        path=\"/palette/:id\"\n        render={(routeProps) => (\n          <Palette\n            Palette={generatePalette(findPalette(routeProps.match.params.id))}\n          />\n        )}\n      />\n      <Route\n        exact\n        path=\"/palette/:idPalette/:idColor\"\n        render={(routeProps) => (\n          <SingleColorPalette\n            {...routeProps}\n            Palette={generatePalette(\n              findPalette(routeProps.match.params.idPalette)\n            )}\n          />\n        )}\n      />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}